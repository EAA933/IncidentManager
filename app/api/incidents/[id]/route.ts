import { prisma } from '@/lib/prisma'; import { NextRequest, NextResponse } from 'next/server'; export async function GET(_:NextRequest,{params}:{params:{id:string}}){ const item=await prisma.incident.findUnique({where:{id:params.id},include:{attachments:true,updates:true}}); if(!item) return new NextResponse('Not found',{status:404}); return NextResponse.json(item);} export async function PUT(req:NextRequest,{params}:{params:{id:string}}){ const body=await req.json(); try{ const item=await prisma.incident.update({ where:{id:params.id}, data:{ title:body.title, description:body.description, nextSteps:body.nextSteps, status:body.status, correspondent:body.correspondent, area:body.area, controlOwner:body.controlOwner }}); return NextResponse.json(item);}catch(e:any){ return new NextResponse(e.message||'Error',{status:400}); }} export async function DELETE(_:NextRequest,{params}:{params:{id:string}}){ await prisma.incident.delete({where:{id:params.id}}); return NextResponse.json({ok:true}); }